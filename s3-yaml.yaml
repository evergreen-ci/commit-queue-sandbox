# To use, run `evergreen-staging patch --path s3-yaml.yml`

# AWS_KEY, AWS_SECRET, and AWS_SESSION_TOKEN need to be replenished every run since they are temporary credentials.
# Permissions are canned ACL's: https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl
tasks:
    - name: s3put-visibility-private.permissions-public-read
      tags: ['s3put', 'visibility-private', 'permissions-public-read']
      commands:
          - func: clone-project
          - command: s3.put
            params:
                aws_key: ${AWS_ACCESS_KEY_ID}
                aws_secret: ${AWS_SECRET_ACCESS_KEY}
                aws_session_token: ${AWS_SESSION_TOKEN}
                local_file: src/upload-artifacts/visibility-private.permissions-public-read.txt
                remote_file: mci/${task_id}/${execution}/visibility-private.permissions-public-read.txt
                bucket: mciuploads
                permissions: public-read
                visibility: private
                content_type: text/plain
    - name: s3put-visibility-public.permissions-public-read
      tags: ['s3put', 'visibility-public', 'permissions-public-read']
      commands:
          - func: clone-project
          - command: s3.put
            params:
                aws_key: ${AWS_ACCESS_KEY_ID}
                aws_secret: ${AWS_SECRET_ACCESS_KEY}
                aws_session_token: ${AWS_SESSION_TOKEN}
                local_file: src/upload-artifacts/visibility-public.permissions-public-read.txt
                remote_file: mci/${task_id}/${execution}/visibility-public.permissions-public-read.txt
                bucket: mciuploads
                permissions: public-read
                visibility: public
                content_type: text/plain
    - name: s3put-visibility-none.permissions-public-read
      tags: ['s3put', 'visibility-none', 'permissions-public-read']
      commands:
          - func: clone-project
          - command: s3.put
            params:
                aws_key: ${AWS_ACCESS_KEY_ID}
                aws_secret: ${AWS_SECRET_ACCESS_KEY}
                aws_session_token: ${AWS_SESSION_TOKEN}
                local_file: src/upload-artifacts/visibility-none.permissions-public-read.txt
                remote_file: mci/${task_id}/${execution}/visibility-none.permissions-public-read.txt
                bucket: mciuploads
                permissions: public-read
                visibility: none
                content_type: text/plain
    - name: s3put-visibility-private.permissions-private
      tags: ['s3put', 'visibility-private', 'permissions-private']
      commands:
          - func: clone-project
          - command: s3.put
            params:
                aws_key: ${AWS_ACCESS_KEY_ID}
                aws_secret: ${AWS_SECRET_ACCESS_KEY}
                aws_session_token: ${AWS_SESSION_TOKEN}
                local_file: src/upload-artifacts/visibility-private.permissions-private.txt
                remote_file: mci/${task_id}/${execution}/visibility-private.permissions-private.txt
                bucket: mciuploads
                permissions: private
                visibility: private
                content_type: text/plain
    - name: s3put-visibility-public.permissions-private
      tags: ['s3put', 'visibility-public', 'permissions-private']
      commands:
          - func: clone-project
          - command: s3.put
            params:
                aws_key: ${AWS_ACCESS_KEY_ID}
                aws_secret: ${AWS_SECRET_ACCESS_KEY}
                aws_session_token: ${AWS_SESSION_TOKEN}
                local_file: src/upload-artifacts/visibility-public.permissions-private.txt
                remote_file: mci/${task_id}/${execution}/visibility-public.permissions-private.txt
                bucket: mciuploads
                permissions: private
                visibility: public
                content_type: text/plain
    - name: s3put-visibility-none.permissions-private
      tags: ['s3put', 'visibility-none', 'permissions-private']
      commands:
          - func: clone-project
          - command: s3.put
            params:
                aws_key: ${AWS_ACCESS_KEY_ID}
                aws_secret: ${AWS_SECRET_ACCESS_KEY}
                aws_session_token: ${AWS_SESSION_TOKEN}
                local_file: src/upload-artifacts/visibility-none.permissions-private.txt
                remote_file: mci/${task_id}/${execution}/visibility-none.permissions-private.txt
                bucket: mciuploads
                permissions: private
                visibility: none
                content_type: text/plain
    - name: s3put-visibility-signed.permissions-private
      tags: ['s3put', 'visibility-signed', 'permissions-private']
      commands:
          - func: clone-project
          - command: s3.put
            params:
                aws_key: ${AWS_ACCESS_KEY_USER_ID}
                aws_secret: ${AWS_SECRET_ACCESS_KEY_USER}
                local_file: src/upload-artifacts/visibility-signed.permissions-private.txt
                remote_file: mci/${task_id}/${execution}/visibility-signed.permissions-private.txt
                bucket: mciuploads
                permissions: private
                visibility: signed
                content_type: text/plain
    - name: s3-symlink-file-correctly
      commands:
          - func: clone-project
          - command: shell.exec
            params:
                shell: bash
                script: |
                    echo "Hello, world" > src/file.txt
                    ln -s src/file.txt src/symlink_file.txt
                    tar -czf src/symlink.tar.gz src/symlink_file.txt src/file.txt
          - command: s3.put
            params:
                aws_key: ${AWS_ACCESS_KEY_USER_ID}
                aws_secret: ${AWS_SECRET_ACCESS_KEY_USER}
                local_file: src/symlink.tar.gz
                remote_file: mci/${task_id}/${execution}/symlink.tar.gz
                bucket: mciuploads
                permissions: private
                visibility: signed
                content_type: application/tar+gzip
          - command: s3.get
            params:
                aws_key: ${AWS_ACCESS_KEY_USER_ID}
                aws_secret: ${AWS_SECRET_ACCESS_KEY_USER}
                remote_file: mci/${task_id}/${execution}/symlink.tar.gz
                bucket: mciuploads
                extract_to: src/symlink-contents
          - command: shell.exec
            params:
                shell: bash
                script: |
                    echo "ls src"
                    ls src
                    echo "ls src/symlink-contents"
                    ls src/symlink-contents
                    echo "symlink_file.txt: "
                    cat src/symlink-contents/src/symlink_file.txt
                    echo "file.txt: "
                    cat src/symlink-contents/src/file.txt
    - name: s3-symlink-file-incorrectly
      commands:
          - func: clone-project
          - command: shell.exec
            params:
                shell: bash
                script: |
                    echo "Hello, world!" > src/file.txt
                    ln -s src/file.txt src/symlink_file.txt
                    # Does not include the file.txt which is symlinked.
                    tar -czf src/symlink.tar.gz src/symlink_file.txt
          - command: s3.put
            params:
                aws_key: ${AWS_ACCESS_KEY_USER_ID}
                aws_secret: ${AWS_SECRET_ACCESS_KEY_USER}
                local_file: src/symlink.tar.gz
                remote_file: mci/${task_id}/${execution}/symlink.tar.gz
                bucket: mciuploads
                permissions: private
                visibility: signed
                content_type: application/tar+gzip
          - command: s3.get
            params:
                aws_key: ${AWS_ACCESS_KEY_USER_ID}
                aws_secret: ${AWS_SECRET_ACCESS_KEY_USER}
                remote_file: mci/${task_id}/${execution}/symlink.tar.gz
                bucket: mciuploads
                extract_to: src/symlink-contents
          - command: shell.exec
            params:
                shell: bash
                script: |
                    echo "ls src"
                    ls src
                    echo "ls src/symlink-contents"
                    ls src/symlink-contents
                    echo "symlink_file.txt: "
                    cat src/symlink-contents/src/symlink_file.txt
                    echo "file.txt: "
                    cat src/symlink-contents/src/file.txt

buildvariants:
  - name: s3put-public-read
    display_name: "s3.put permissions public-read"
    tasks:
      - s3put-visibility-private.permissions-public-read
      - s3put-visibility-public.permissions-public-read
      - s3put-visibility-none.permissions-public-read
    run_on:
        - ubuntu2204-small
  - name: s3put-private
    display_name: "s3.put permissions private"
    tasks:
      - s3put-visibility-private.permissions-private
      - s3put-visibility-public.permissions-private
      - s3put-visibility-none.permissions-private
      - s3put-visibility-signed.permissions-private
    run_on:
        - ubuntu2204-small
  - name: s3-misc
    display_name: "s3 miscellaneous"
    tasks:
      - s3-symlink-file-correctly
      - s3-symlink-file-incorrectly
    run_on:
        - ubuntu2204-small

functions:
    clone-project:
      - command: git.get_project
        params:
            directory: src
