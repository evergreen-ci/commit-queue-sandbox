## this is a change
ignore:
  - "*.md" # don't schedule tests if a commit only changes markdown files
stepback: true

pre: &pre
  - command: git.get_project
    params:
      directory: src
  - func: create virtualenv

post:
  - command: attach.xunit_results
    params:
      file: src/junit-*.xml

functions:
  create virtualenv:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          echo "noop"
          git describe


task_groups:
  - name: task_group1
    max_hosts: 1
    tasks:
      - dependencyTask2
      - dependencyTask3
      - dependencyTask4
  - name: my_group
    max_hosts: 1
    setup_group:
      - command: shell.exec
        params:
          script: |
            set -o verbose
            set -o errexit
            echo "setup_group"
    teardown_group:
      - command: shell.exec
        params:
          script: |
            set -o verbose
            set -o errexit
            echo "teardown_group"
    setup_task:
      - command: shell.exec
        params:
          script: |
            set -o verbose
            set -o errexit
            echo "setup_task"
    teardown_task:
      - command: shell.exec
        params:
          script: |
            set -o verbose
            set -o errexit
            echo "teardown_task"
    tasks:
      - first_task_in_task_group
      - second_task_in_task_group
      - test
      - third_task_in_task_group
      - fourth_task_in_task_group

buildvariants:
  - name: localhost
    display_name: localhost
    run_on:
      - ubuntu1604-test
    tasks:
      - name: my_group
  - display_name: Generate Tasks for Version
    name: generate-tasks-for-version
    run_on:
      - ubuntu1604-test
    tasks:
      - name: version_gen

  - display_name: TestBV1
    name: testBV1
    run_on:
      - ubuntu1604-test
    tasks:
      - name: placeholder
    depends_on:
      - name: version_gen
        variant: generate-tasks-for-version
        omit_generated_tasks: true

  - name: testBV2
    display_name: TestBV2
    run_on:
      - ubuntu1604-test
    tasks:
      - name: dependencyTask
      - name: placeholder

  - name: testBV3
    display_name: TestBV3
    run_on:
      - ubuntu1604-test
    tasks:
      - name: placeholder
    depends_on:
      - name: version_gen
        variant: generate-tasks-for-version
      - name: dependencyTask
        variant: testBV4

  - name: testBV5
    display_name: TestBV5
    run_on:
      - ubuntu1604-test
    tasks:
      - name: placeholder
    depends_on:
      - name: dependencyTask2
        variant: testBV4

  - name: testBV6
    display_name: TestBV6
    run_on:
      - ubuntu1604-test
    tasks:
      - name: task_group1

  - name: testBV4
    display_name: TestBV4
    run_on:
      - ubuntu1604-test
    tasks:
      - name: dependencyTask
      - name: dependencyTask2
      - name: shouldNotActivate

tasks:
  - name: first_task_in_task_group
    commands:
      - command: shell.exec
        params:
          script: |
            set -o verbose
            set -o errexit
            echo "first"
  - name: second_task_in_task_group
    commands:
      - command: shell.exec
        params:
          script: |
            set -o verbose
            set -o errexit
            echo "second"
  - name: third_task_in_task_group
    commands:
      - command: shell.exec
        params:
          script: |
            set -o verbose
            set -o errexit
            echo "third"
  - name: fourth_task_in_task_group
    commands:
      - command: shell.exec
        params:
          script: |
            set -o verbose
            set -o errexit
            echo "fourth"
  - name: container_task
    commands:
      - command: shell.exec
        params:
          script: |
            set -o verbose
            set -o errexit
            echo "container task"
  - name: test
    commands:
      - command: git.get_project
        params:
          directory: src
          token: "token foo"
      - command: shell.exec
        params:
          script: |
            set -o verbose
            set -o errexit
            echo "hi"

            # files to archive.targz_pack
            mkdir archive
            touch archive/a_to_archive
            touch archive/b_to_archive

            # file to s3.put
            mkdir upload
            echo ${task_name} > upload/s3
      - command: subprocess.exec
        params:
          working_dir: archive
          binary: /bin/bash
          args:
            - "-c"
            - "touch foo"
      - command: subprocess.exec
        params:
          working_dir: archive
          command: "/usr/bin/touch bar"
      - command: archive.targz_pack
        params:
          target: "archive.tgz"
          source_dir: "archive"
          include:
            - "*_to_archive"
      - command: archive.targz_extract
        params:
          path: "archive.tgz"
          destination: "output"
      - command: archive.zip_pack
        params:
          target: "archive.zip"
          source_dir: "archive"
          include:
            - "*_to_archive"
      - command: archive.zip_extract
        params:
          path: "archive.zip"
          destination: "output"
      - command: archive.auto_extract
        params:
          path: "archive.zip"
          destination: "output"
      - command: archive.auto_extract
        params:
          path: "archive.tgz"
          destination: "output"
      - command: attach.results
        params:
          file_location: "src/agent/command/testdata/attach/plugin_attach_results.json"
      - command: attach.xunit_results
        params:
          file: "src/agent/command/testdata/xunit/junit_4.xml"
      - command: expansions.update
        params:
          foo: bar
      - command: gotest.parse_files
        params:
          files:
            - "src/agent/command/testdata/gotest/4_simple.log"
      - command: keyval.inc
        params:
          key: "test"
          destination: "test_num"
      - command: downstream_expansions.set
        params:
          file: "src/scripts/downstream_expansions.yml"
          destination: "test_num"
      - command: manifest.load
      - command: s3.put
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: upload/s3
          remote_file: evergreen/smoke/${build_id}-${build_variant}/evergreen-${task_name}-${revision}
          bucket: mciuploads
          optional: "true"
          content_type: text/html
          permissions: public-read
      - command: s3.put
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: upload/s3
          remote_file: evergreen/smoke/${build_id}-${build_variant}/evergreen-${task_name}-${revision}
          bucket: mciuploads
          optional: true
          content_type: text/html
          permissions: public-read
      - command: s3.get
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          remote_file: evergreen/smoke/${build_id}-${build_variant}/evergreen-${task_name}-${revision}
          bucket: mciuploads
          local_file: upload/s3-get
      - command: s3Copy.copy
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          s3_copy_files:
            - source:
                path: "evergreen/smoke/${build_id}-${build_variant}/evergreen-${task_name}-${revision}"
                bucket: mciuploads
              destination:
                path: "evergreen/smoke/${build_id}-${build_variant}/evergreen-${task_name}-${revision}-copy"
                bucket: mciuploads
      - command: timeout.update
        params:
          timeout_secs: 2700
  - name: placeholder
    depends_on:
      - name: version_gen
        variant: generate-tasks-for-version
    commands:
      - command: shell.exec
        params:
          working_dir: src
          script: |
            echo "noop"

  - name: dependencyTask
    depends_on:
      - name: shouldNotActivate
    commands:
      - command: shell.exec
        params:
          script: |
            echo "noop"

  - name: dependencyTask2
    commands:
      - command: shell.exec
        params:
          script: |
            exit 1

  - name: dependencyTask3
    commands:
      - command: shell.exec
        params:
          script: |
            exit 1

  - name: dependencyTask4
    commands:
      - command: shell.exec
        params:
          script: |
            echo "noop"


  - name: shouldNotActivate
    commands:
      - command: shell.exec
        params:
          script: |
            echo "noop"

  - name: version_gen
    commands:
      - command: generate.tasks
        params:
          files:
            - src/evergreen.json
