## this is a changes
ignore:
  - "*.md" # don't schedule tests if a commit only changes markdown files
stepback: true

pre: &pre
  - command: expansions.update
    params:
      updates:
        - key: testexp
          value: EVG-17331
  - command: git.get_project
    params:
      directory: src
  - func: create virtualenv

containers:
  - name: evg-container
    working_dir: /
    image: "hadjri/evg-container-self-tests"
    resources:
      cpu: 4096
      memory_mb: 8192
    system:
      cpu_architecture: x86_64
      operating_system: linux

buildvariants:
  - name: ubuntu2004-container
    display_name: Ubuntu 20.04 (Container)
    run_on:
      - evg-container
    expansions:
      goos: linux
      goarch: amd64
      IS_DOCKER: true
      GOROOT: /usr/local/go
      mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu2004-5.0.14.tgz
      decompress: tar zxvf
    tasks:
      - name: unit_tests
        activate: false
      - name: validate_commit_message
      - name: patch_only_task
      - name: batchtime_task
      - name: test_passing_param_to_child
      - name: test-receiving-parent-param
      - name: bynntask
      - name: test_release
      - name: test_release2

  - display_name: Ubuntu 20.04
    name: ubuntu2004
    tags: [ commit-queue-variant, whaat ]
    modules:
      - evergreen
    run_on:
      - ubuntu2004
    expansions:
      module_prefix: hello
    tasks:
      - name: unit_tests
        activate: false
      - name: validate_commit_message
      - name: patch_only_task
      - name: batchtime_task
      - name: test_passing_param_to_child
      - name: test-receiving-parent-param
      - name: bynntask
        batchtime: 1
    display_tasks:
      - name: display_task
        execution_tasks:
          - validate_commit_message
  - display_name: Test Tags
    name: release
    run_on:
      - ubuntu2004-small
    tasks:
      - name: test_release
        cron: "*/5 * * * *"
      - name: my_first_generator
      - name: validate_commit_message
      - name: test_release2

  - name: git-env-test
    display_name: "Giv Env Test"
    modules:
      - evergreen
    run_on:
      - ubuntu2004-small
    display_tasks:
      - name: displayTask1
        execution_tasks:
          - test-restart
          - validate_commit_message
          - validate_commit_message2
    tasks:
      - name: validate_commit_message
      - name: validate_commit_message2
      - name: test-restart
      - name: bynntask

  - name: cron-test
    cron: "*/5 * * * *"
    display_name: "Cron Test"
    run_on:
      - ubuntu2004-small
    tasks:
      - name: validate_commit_message
        activate: false
      - name: test-restart
        activate: false
      - name: bynntask
        activate: false

functions:
  create virtualenv:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          echo "noop"
          git describe

parameters:
  - key: my_param
    value: hello world1!
    description: something to test parameters woot

post:
  - command: attach.xunit_results
    params:
      file: src/junit-*.xml


task_groups:
  - name: group1
    max_hosts: 1
    setup_group:
    - command: git.get_project
      params:
        directory: src
    tasks:
      - test-restart
      - validate_commit_message
      - validate_commit_message2

tasks:
  - name: gen_task_template
    depends_on:
      - name: my_first_generator
        variant: release
    commands:
      - command: shell.exec
        params:
          working_dir: src
          script: |
            echo "noop2"
  - name: bynntask
    commands:
      - command: shell.exec
        params:
          working_dir: src
          script: |
            sleep 120
            echo "admin bynn: ${bynnbynn}"
  - name: test_passing_param_to_child
    tags: [ "my_tag" ]
    commands:
      - command: downstream_expansions.set
        params:
          file: src/downstream_expansions.yml
  - name: test-receiving-parent-param
    disable: true
    commands:
      - command: shell.exec
        params:
          working_dir: src
          script: |
            echo "parent_param_1: ${evg_param_1}, parent_param_2: ${evg_param_2}"
            echo "hello world"
  - name: unit_tests
    commands:
      - command: shell.exec
        params:
          working_dir: src
          script: |
            sleep 120
            echo "my_param: ${my_param}, your_param: ${your_param}" yis
            exit 1
  - name: batchtime_task
    commands:
      - command: shell.exec
        params:
          working_dir: src
          script: |
            echo "noop2"
  - name: validate_commit_message
    commands:
      - command: shell.exec
        params:
          script: |
            set -o verbose
            set -o errexit
            sleep 240
            if [ "${is_commit_queue}" = "true" ]; then
              cat > commit_message.txt <<END_OF_COMMIT_MSG
              ${commit_message}
            END_OF_COMMIT_MSG

              commit_message_content=$(cat commit_message.txt)

              echo "$commit_message_content"
            fi
  - name: validate_commit_message2
    commands:
      - command: shell.exec
        params:
          script: |
            set -o verbose
            set -o errexit
            sleep 240
            if [ "${is_commit_queue}" = "true" ]; then
              cat > commit_message.txt <<END_OF_COMMIT_MSG
              ${commit_message}
            END_OF_COMMIT_MSG

              commit_message_content=$(cat commit_message.txt)

              echo "$commit_message_content"
            fi
  - name: test-restart
    priority: 3
    commands:
      - command: shell.exec
        params:
          script: |
            echo "sleeping"
            ls src
            sleep 10
            . src/task.sh
            echo "triggering restart"
            post_evergreen_status failed test "test desc" false true
      - command: shell.exec
        params:
          script: |
            echo "sleeping 2"
            sleep 10
      - command: shell.exec
        params:
          script: |
            echo "sleeping 3"
            sleep 10

  - name: my_first_generator
    commands:
      - command: generate.tasks
        params:
          files:
            - src/evergreen.json
  - name: test_release
    batchtime: 6
    depends_on:
      - name: unit_tests
        variant: "*"
  - name: test_release2
    batchtime: 5
    depends_on:
      - name: test_release
    commands:
      - command: shell.exec
        params:
          working_dir: src
          script: |
            echo "i am a script"
  - name: patch_only_task
    patch_only: true
    commands:
      - command: downstream_expansions.set
        params:
          file: src/downstream_expansions.yml
      - command: shell.exec
        params:
          working_dir: src
          script: |
            echo "i am patch"
modules:
  - name: evergreen
    repo: git@github.com:evergreen-ci/evergreen.git
    prefix: ${workdir}/src
    branch: main

patch_aliases:
  - alias: "test2"
    variant: "^ubuntu2004$"
    task: "^test.*$"

build_baron_settings:
  ticket_create_project: "EVG"
  ticket_search_projects: [ "EVG" ]
