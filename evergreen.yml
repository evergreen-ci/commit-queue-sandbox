stepback: true
exec_timeout_secs: 3600

buildvariants:
    - display_name: Tests
      name: ubuntu
      run_on:
          - ubuntu2204-small
      tasks:
          - name: first-task
          - name: another-task
            activate: false
          - name: long-task
            activate: false
          - name: short-task
            activate: false
          - name: oops-another-task
            activate: false
          - name: noise-task-1
            activate: false
          - name: noise-task-2
            activate: false
          - name: noise-task-3
            activate: false
          - name: generator
            activate: false
          - name: task-group
            activate: false
          - name: task-d
            activate: false
          - name: task-e
            activate: false
          - name: github.generate_token1
            activate: false
          - name: github.generate_token2
            activate: false
          - name: github.generate_token3
            activate: false
          - name: no-token
            activate: false
          - name: redacting-expansions
            activate: false
          - name: github_generate_token_task_group
            activate: false
          - name: execution-task-1
          - name: execution-task-2
          - name: execution-task-3
      display_tasks:
          - name: display-task
            tasks:
                - execution-task-1
                - execution-task-2
                - execution-task-3

functions:
    clone-project:
        command: git.get_project
        params:
            directory: src

task_groups:
    - name: task-group
      max_hosts: 2
      tasks:
          - task-a
          - task-b
          - task-c
    - name: github_generate_token_task_group
      max_hosts: 2
      setup_group_can_fail_task: true
      setup_group:
          - command: github.generate_token
            params:
                expansion_name: github_token_setup_group
          - command: shell.exec
            params:
                script: |
                    echo "setup_group:"
                    echo ${github_token_setup_group}
                    echo "teardown_group:"
                    echo ${github_token_teardown_group}
                    echo "setup_task:"
                    echo ${github_token_setup_task}
                    echo "teardown_task:"
                    echo ${github_token_teardown_task}
                    echo "timeout:"
                    echo ${github_token_timeout}
      teardown_group:
          - command: github.generate_token
            params:
                expansion_name: github_token_teardown_group
          - command: shell.exec
            params:
                script: |
                    echo "setup_group:"
                    echo ${github_token_setup_group}
                    echo "teardown_group:"
                    echo ${github_token_teardown_group}
                    echo "setup_task:"
                    echo ${github_token_setup_task}
                    echo "teardown_task:"
                    echo ${github_token_teardown_task}
                    echo "timeout:"
                    echo ${github_token_timeout}
      setup_task_can_fail_task: true
      setup_task:
          - command: github.generate_token
            params:
                expansion_name: github_token_setup_task
          - command: shell.exec
            params:
                script: |
                    echo "setup_group:"
                    echo ${github_token_setup_group}
                    echo "teardown_group:"
                    echo ${github_token_teardown_group}
                    echo "setup_task:"
                    echo ${github_token_setup_task}
                    echo "teardown_task:"
                    echo ${github_token_teardown_task}
                    echo "timeout:"
                    echo ${github_token_timeout}
      teardown_task_can_fail_task: true
      teardown_task:
          - command: github.generate_token
            params:
                expansion_name: github_token_teardown_task
          - command: shell.exec
            params:
                script: |
                    echo "setup_group:"
                    echo ${github_token_setup_group}
                    echo "teardown_group:"
                    echo ${github_token_teardown_group}
                    echo "setup_task:"
                    echo ${github_token_setup_task}
                    echo "teardown_task:"
                    echo ${github_token_teardown_task}
                    echo "timeout:"
                    echo ${github_token_timeout}
      timeout:
          - command: github.generate_token
            params:
                expansion_name: github_token_timeout
          - command: shell.exec
            params:
                script: |
                    echo "setup_group:"
                    echo ${github_token_setup_group}
                    echo "teardown_group:"
                    echo ${github_token_teardown_group}
                    echo "setup_task:"
                    echo ${github_token_setup_task}
                    echo "teardown_task:"
                    echo ${github_token_teardown_task}
                    echo "timeout:"
                    echo ${github_token_timeout}
      tasks:
        - github_token_task_group_task

tasks:
    - name: task-a
      patchable: false
      commands:
          - command: shell.exec
            params:
                script: "echo hello world"
    - name: task-b
      patch_only: true
      commands:
          - command: shell.exec
            params:
                script: "echo hello world"
    - name: task-c
      commands:
          - command: shell.exec
            params:
                script: "echo hello world"
      # depends_on: # depends on test
      #     - task-d
      #     - task-e
    - name: task-d
      patchable: false
      commands:
          - command: shell.exec
            params:
                script: "echo hello world"
    - name: task-e
      patchable: false
      commands:
          - command: shell.exec
            params:
                script: "echo hello world"
    - name: execution-task-1
      commands:
          - command: shell.exec
            params:
                script: |
                    exit 0
    - name: execution-task-2
      commands:
          - command: shell.exec
            params:
                script: |
                    exit 0
    - name: execution-task-3
      commands:
          - command: shell.exec
            params:
                script: |
                    exit 0
    - name: first-task
      commands:
          - command: shell.exec
            params:
                script: |
                    echo "Task"
                    # exit 1 #1
    - name: another-task
      depends_on:
          - noise-task-1
      commands:
          - command: shell.exec
            params:
                script: |
                    echo "Task"
                    # exit 1 #2
    - name: long-task
      commands:
          - command: shell.exec
            params:
                script: |
                    echo "Task"
                    # exit 1 #8
    - name: short-task
      commands:
          - command: shell.exec
            params:
                script: |
                    echo "Task"
                    # exit 1 #5
    - name: oops-another-task
      commands:
          - command: shell.exec
            params:
                script: |
                    echo "Task"
                    # exit 1 #7
    - name: noise-task-1
      commands:
          - command: shell.exec
            params:
                script: |
                    echo "Task"
                    exit 0
    - name: noise-task-2
      commands:
          - command: shell.exec
            params:
                script: |
                    echo "Task"
                    exit 0
    - name: noise-task-3
      commands:
          - command: shell.exec
            params:
                script: |
                    echo "Task"
                    exit 0
    - name: generator
      commands:
          - func: clone-project
          - command: generate.tasks
            params:
                files:
                    - src/generator.json
    - name: github.generate_token1
      commands:
          - command: github.generate_token
            params:
                owner: evergreen-ci
                repo: github-merge-queue-sandbox
                expansion_name: testing_expansion1
          - command: shell.exec
            params:
                script: |
                    echo ${testing_expansion1}
                    git clone https://oauth2:${testing_expansion1}@github.com/evergreen-ci/github-merge-queue-sandbox.git evg1
    - name: github.generate_token2
      commands:
          - command: github.generate_token
            params:
                owner: evergreen-ci
                repo: github-merge-queue-sandbox
                expansion_name: testing_expansion2
                permissions: # In theory, this should strip it of contents. and this task should fail.
                    checks: read
          - command: shell.exec
            params:
                script: |
                    echo ${testing_expansion2}
                    # git clone https://oauth2:${testing_expansion2}@github.com/evergreen-ci/github-merge-queue-sandbox.git evg1
                    echo 'This would fail if it ran.'
    - name: github.generate_token3
      commands:
          - command: github.generate_token
            params:
                expansion_name: testing_expansion2
          - command: shell.exec
            params:
                script: |
                    echo ${testing_expansion2}
                    git clone https://oauth2:${testing_expansion2}@github.com/evergreen-ci/github-merge-queue-sandbox.git evg1
    - name: no-token
      commands:
          - command: shell.exec
            params:
                script: |
                    # git clone https://github.com/evergreen-ci/github-merge-queue-sandbox.git evg1
                    echo 'This would fail if it ran.'
    - name: github_token_task_group_task
      commands:
          - command: shell.exec
            params:
                script: |
                    echo "This is the main block:"
                    echo "setup_group:"
                    echo ${github_token_setup_group}
                    echo "teardown_group:"
                    echo ${github_token_teardown_group}
                    echo "setup_task:"
                    echo ${github_token_setup_task}
                    echo "teardown_task:"
                    echo ${github_token_teardown_task}
                    echo "timeout:"
                    echo ${github_token_timeout}
          - command: shell.exec
            params:
                script: |
                    echo "Clone project with setup group"
                    git clone https://oauth2:${github_token_setup_group}@github.com/evergreen-ci/github-merge-queue-sandbox.git setup_group
          - command: shell.exec
            params:
                script: |
                    echo "Clone project with setup task"
                    git clone https://oauth2:${github_token_setup_task}@github.com/evergreen-ci/github-merge-queue-sandbox.git setup_task
    - name: redacting-expansions
      commands:
          - func: clone-project
          - command: expansions.update
            params:
                updates:
                    - key: testing_expansion2
                      value: "expansion#2 says hi"
                    - key: testing_expansion4
                      value: "expansion#4 says hi"
          - command: expansions.update
            params:
                updates:
                    - key: testing_expansion1
                      value: "expansion#1 says hi v1"
                    - key: testing_expansion2
                      concat: " let me add on to that!"
                    - key: testing_expansion3
                      value: "expansion#3 says hi"
                      redact: true
                    - key: testing_expansion4
                      concat: " let me add on to that!"
                      redact: true
                    - key: testing_expansion1
                      value: "expansion#1 says hi v2"
                      redact: true
                    - key: testing_expansion1
                      value: "expansion#1 says hi v3"
          - command: expansions.update
            params:
                file: src/expansions.yaml
          - command: expansions.update
            params:
                file: src/expansions.redact.yaml
                redact_file_expansions: true
          - command: shell.exec
            params:
                script: |
                    echo "Expansion #1 v1 should not redact"
                    echo "expansion#1 says hi v1"
                    echo "Expansion #1 v2 should redact"
                    echo "expansion#1 says hi v2"
                    echo "Expansion #1 v3 should not redact"
                    echo "expansion#1 says hi v3"
                    echo "Expansion #2"
                    echo ${testing_expansion2}
                    echo "Expansion #3"
                    echo ${testing_expansion3}
                    echo "Expansion #4"
                    echo ${testing_expansion4}
                    echo "File expansion #1"
                    echo ${expansion_key_1}
                    echo "File expansion #2"
                    echo ${expansion_key_2}
                    echo "File expansion #3"
                    echo ${expansion_key_3}
                    echo "File expansion #4"
                    echo ${expansion_key_4}