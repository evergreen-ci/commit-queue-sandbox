buildvariants:
  - display_name: Ubuntu 16.04
    name: ubuntu1604
    batchtime: 4
    modules:
      - evergreen
    run_on:
      - ubuntu1604-test
    expansions:
      module_prefix: hello
    tasks:
      - name: unit_tests
      - name: validate_commit_message
      - name: patch_only_task
      - name: batchtime_task
      - name: test_passing_param_to_child
      - name: test-receiving-parent-param
        batchtime: 1
    display_tasks:
      - name: display_task
        execution_tasks:
          - validate_commit_message
  - display_name: Test Tags
    name: release
    run_on:
      - ubuntu1604-test
    tasks:
      - name: test_release
      - name: my_first_generator

functions:
  create virtualenv:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          echo "noop"
parameters:
  - key: my_param
    value: hello world1!
    description: something to test parameters woot

pre:
  - command: git.get_project
    params:
      directory: src
  - func: create virtualenv

post:
  - command: attach.xunit_results
    params:
      file: src/junit-*.xml

tasks:
  - name: test_passing_param_to_child
    commands:
      - command: downstream_expansions.set
        params:
          file: downstream_expansions.yml
  - name: test-receiving-parent-param
    commands:
      - command: shell.exec
        params:
          working_dir: src
          script: |
            echo "parent_param_1: ${evg_param_1}, parent_param_2: ${evg_param_2}"
  - name: unit_tests
    commands:
      - command: shell.exec
        params:
          working_dir: src
          script: |
            echo "my_param: ${my_param}, your_param: ${your_param}"
  - name: batchtime_task
    commands:
      - command: shell.exec
        params:
          working_dir: src
          script: |
            echo "noop2"
  - name: validate_commit_message
    commands:
      - command: shell.exec
        params:
          script: |
            set -o verbose
            set -o errexit
            if [ "${is_commit_queue}" = "true" ]; then
              cat > commit_message.txt <<END_OF_COMMIT_MSG
              ${commit_message}
            END_OF_COMMIT_MSG
              commit_message_content=$(cat commit_message.txt)
              echo "$commit_message_content"
            fi
  - name: my_first_generator
    commands:
      - command: generate.tasks
        params:
          files:
            - src/evergreen.json
  - name: test_release
    depends_on:
      - name: unit_tests
        variant: "*"
    commands:
      - command: shell.exec
        params:
          working_dir: src
  - name: patch_only_task
    patch_only: true
    commands:
      - command: downstream_expansions.set
        params:
          file: commit-queue-sandbox/downstream_expansions.yml
      - command: shell.exec
        params:
          working_dir: src
          script: |
            echo "i am patch only"
modules:
  - name: evergreen
    repo: git@github.com:evergreen-ci/evergreen.git
    prefix: ${workdir}/src
    branch: main
