command_type: test
stepback: false
ignore:
    - "*.md" # don't schedule tests if a commit only changes markdown files
    - "*.rst" # don't schedule tests if a commit only changes rst files

#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-target
    # Runs a make target. The task name should correspond to a make target.
    name: test
    commands:
      - func: run-make
        vars: { target: "${task_name}" }

#######################################
#              Functions              #
#######################################
functions:
  get-project-and-modules:
    - command: git.get_project
      type: system
      params:
        directory: cocoa
    - command: subprocess.exec
      type: setup
      params:
        working_dir: cocoa
        binary: make
        args: ["mod-tidy"]
        include_expansions_in_env: ["GOROOT"]
  run-make:
    command: subprocess.exec
    type: test
    params:
      working_dir: cocoa
      binary: make
      args: ["${target}"]
      include_expansions_in_env: ["GOROOT", "RACE_DETECTOR"]
      env:
        AWS_ACCESS_KEY: ${aws_access_key}
        AWS_SECRET_ACCESS_KEY: ${aws_secret_access_key}
        AWS_ROLE: ${aws_role}
        AWS_REGION: ${aws_region}
        AWS_ECS_CLUSTER: ${aws_ecs_cluster}
        AWS_SECRET_PREFIX: ${aws_secret_prefix}
        AWS_ECS_TASK_DEFINITION_PREFIX: ${aws_ecs_task_definition_prefix}
        AWS_ECS_TASK_ROLE: ${aws_ecs_task_role}
        AWS_ECS_EXECUTION_ROLE: ${aws_ecs_execution_role}
        AWS_ECS_CAPACITY_PROVIDER: ${aws_ecs_capacity_provider}
  parse-results:
    command: gotest.parse_files
    type: setup
    params:
      files:
        - "cocoa/build/output.*"

#######################################
#                Tasks                #
#######################################
tasks:
  - <<: *run-target
    tags: ["test"]
    name: test-cocoa
    must_have_test_results: true
  - <<: *run-target
    tags: ["test"]
    name: test-ecs
    must_have_test_results: true
  - <<: *run-target
    tags: ["test"]
    name: test-awsutil
    must_have_test_results: true
  - <<: *run-target
    tags: ["test"]
    name: test-mock
    must_have_test_results: true
  - <<: *run-target
    tags: ["test"]
    name: test-secret
    must_have_test_results: true

  - <<: *run-target
    tags: ["lint"]
    name: lint-cocoa
    must_have_test_results: true
  - <<: *run-target
    tags: ["lint"]
    name: lint-ecs
    must_have_test_results: true
  - <<: *run-target
    tags: ["lint"]
    name: lint-awsutil
    must_have_test_results: true
  - <<: *run-target
    tags: ["lint"]
    name: lint-internal-testcase
    must_have_test_results: true
  - <<: *run-target
    tags: ["lint"]
    name: lint-internal-testutil
    must_have_test_results: true
  - <<: *run-target
    tags: ["lint"]
    name: lint-mock
    must_have_test_results: true
  - <<: *run-target
    tags: ["lint"]
    name: lint-secret
    must_have_test_results: true

  - name: verify-mod-tidy
    commands:
      - command: git.get_project
        type: system
        params:
          directory: cocoa
      - func: run-make
        vars: { target: "${task_name}" }

task_groups:
  - name: lint_group
    tasks: [".lint"]
    max_hosts: 4
    setup_group:
      - func: get-project-and-modules
    teardown_task:
      - func: parse-results
      - func: run-make
        vars:
          target: clean-results
  - name: test_group
    tasks: [".test"]
    max_hosts: 4
    setup_group:
      - func: get-project-and-modules
    teardown_task:
      - func: parse-results
      - func: run-make
        vars:
          target: clean-results

#######################################
#           Buildvariants             #
#######################################
buildvariants:
  - name: lint
    display_name: Lint
    expansions:
      GOROOT: /opt/golang/go1.24
    run_on:
      - ubuntu2204-small
    tasks:
      - name: lint_group
      - name: verify-mod-tidy

  - name: ubuntu
    display_name: Ubuntu 22.04
    expansions:
      GOROOT: /opt/golang/go1.24
      RACE_DETECTOR: true
    run_on:
      - ubuntu2204-small
    tasks:
      - name: test_group
